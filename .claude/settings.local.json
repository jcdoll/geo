{
  "permissions": {
    "allow": [
      "Bash(rg:*)",
      "WebFetch(domain:docs.anthropic.com)",
      "Bash(grep:*)",
      "Bash(find:*)",
      "Bash(python -m pytest tests/test_donut_displacement.py -v)",
      "Bash(python3 -m pytest tests/test_donut_displacement.py -v)",
      "Bash(pytest:*)",
      "Bash(python -m pytest tests/test_gravity_buoyancy.py::test_air_rises_in_magma -v)",
      "Bash(python3 -m pytest tests/test_gravity_buoyancy.py::test_air_rises_in_magma -v)",
      "Bash(python3 -m pytest tests/test_donut_displacement.py::test_donut_with_water -v -s)",
      "Bash(python3 tests/run_visual_tests.py:*)",
      "Bash(python3 -m pytest tests/test_donut_displacement.py::test_donut_with_water -v -s --tb=short)",
      "Bash(python3 -m pytest tests/test_donut_displacement.py::test_donut_with_water -v -s --tb=no)",
      "Bash(python3 -m pytest tests/test_gravity_buoyancy.py::test_buoyancy_combinations -k \"magma and air\" -v)",
      "Bash(python3 -m pytest tests/test_donut_displacement.py::test_donut_with_water -v --tb=short -k donut)",
      "Bash(python3 -m pytest tests/test_donut_displacement.py::test_rock_water_displacement -v -s --tb=short)",
      "Bash(python3:*)",
      "Bash(rm:*)",
      "Bash(PYTHONPATH=/home/jcdoll/github/personal/geo pytest tests/test_buoyancy_rigid_bodies.py::test_ice_floats_in_water -v -s)",
      "Bash(PYTHONPATH=/home/jcdoll/github/personal/geo python tests/test_simple_buoyancy.py)",
      "Bash(PYTHONPATH=/home/jcdoll/github/personal/geo python tests/test_buoyancy_mechanics.py)",
      "Bash(PYTHONPATH=/home/jcdoll/github/personal/geo python tests/test_acceleration_analysis.py)",
      "Bash(PYTHONPATH=/home/jcdoll/github/personal/geo python tests/test_pressure_diagnosis.py)",
      "Bash(PYTHONPATH=/home/jcdoll/github/personal/geo python tests/test_gentle_buoyancy.py)",
      "Bash(python tests:*)",
      "Bash(rm:*)",
      "Bash(python test_ice_buoyancy_debug.py:*)",
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "Bash(ls:*)",
      "Bash(echo:*)",
      "Bash(python:*)",
      "Bash(true)",
      "Bash(PYTHONPATH=/home/jcdoll/github/personal/geo pytest tests/unit/test_materials.py -v --tb=short)",
      "Bash(PYTHONPATH=/home/jcdoll/github/personal/geo pytest tests/ -v --tb=no)",
      "Bash(PYTHONPATH=/home/jcdoll/github/personal/geo pytest tests/unit/test_materials.py -v)",
      "Bash(PYTHONPATH=/home/jcdoll/github/personal/geo pytest tests/unit/test_poisson_solver.py -v --tb=short)",
      "Bash(PYTHONPATH=/home/jcdoll/github/personal/geo pytest tests/ --tb=no -q)",
      "Bash(PYTHONPATH=/home/jcdoll/github/personal/geo pytest tests/unit/ --tb=no -q)",
      "Bash(PYTHONPATH=/home/jcdoll/github/personal/geo pytest tests/integration/ tests/framework/ tests/diagnostics/ --tb=no -q)",
      "Bash(PYTHONPATH=/home/jcdoll/github/personal/geo pytest tests/scenarios/ tests/legacy_scenarios/ --tb=no -q)",
      "Bash(PYTHONPATH=/home/jcdoll/github/personal/geo pytest tests/unit/test_material_cache_cleanup.py -v --tb=short)",
      "Bash(PYTHONPATH=/home/jcdoll/github/personal/geo pytest tests/unit/test_surface_tension.py -v --tb=short)",
      "Bash(PYTHONPATH=/home/jcdoll/github/personal/geo pytest tests/scenarios/ -v --tb=short)",
      "Bash(PYTHONPATH=/home/jcdoll/github/personal/geo pytest tests/legacy_scenarios/ -v --tb=short -k \"not stress\")",
      "Bash(PYTHONPATH=/home/jcdoll/github/personal/geo pytest tests/legacy_scenarios/test_water.py::test_water_conservation -v --tb=short)",
      "Bash(SDL_VIDEODRIVER=dummy PYTHONPATH=/home/jcdoll/github/personal/geo pytest tests/legacy_scenarios/test_water.py::test_water_conservation -v --tb=short -s)",
      "Bash(PYTHONPATH=/home/jcdoll/github/personal/geo pytest tests/legacy_scenarios/test_water.py::test_water_conservation -v -s)",
      "Bash(chmod:*)",
      "Bash(PYTHONPATH=/home/jcdoll/github/personal/geo pytest tests/scenarios/test_scenarios.py::test_water_conservation -v --tb=short -k \"40\")",
      "Bash(PYTHONPATH=/home/jcdoll/github/personal/geo pytest tests/scenarios/test_scenarios.py::test_gravity_fall -v --tb=short)",
      "Bash(PYTHONPATH=/home/jcdoll/github/personal/geo pytest:*)",
      "Bash(pytest:*)",
      "Bash(PYTHONPATH=/home/jcdoll/github/personal/geo pytest tests/scenarios/test_scenarios.py::test_water_blob_cohesion -v --tb=short)",
      "Bash(PYTHONPATH=/home/jcdoll/github/personal/geo pytest tests/**)",
      "Bash(PYTHONPATH=/home/jcdoll/github/personal/geo pytest tests/:*)",
      "Bash(PYTHONPATH=/home/jcdoll/github/personal/geo pytest tests/unit/:*)",
      "Bash(PYTHONPATH=/home/jcdoll/github/personal/geo pytest tests/integration/:*)",
      "Bash(PYTHONPATH=/home/jcdoll/github/personal/geo python3 -m pytest tests/scenarios/test_scenarios.py -v)",
      "Bash(SDL_VIDEODRIVER=dummy python tests/run_visual_tests.py --list)",
      "Bash(SDL_VIDEODRIVER=dummy python tests/run_visual_tests.py water_blob --steps 5)",
      "Bash(SDL_VIDEODRIVER=dummy python tests/run_visual_tests.py water_blob)",
      "Bash(source:*)",
      "Bash(awk:*)",
      "Bash(PYTHONPATH=. pytest tests/unit/test_pressure_gradient_term.py -v)",
      "Bash(PYTHONPATH=. pytest --tb=short -q)",
      "Bash(PYTHONPATH=. pytest tests/scenarios/test_scenarios.py::test_material_stability -v)",
      "Bash(PYTHONPATH=. pytest tests/scenarios/test_scenarios.py::test_phase_transitions -v -k \"ICE-melting\")",
      "Bash(PYTHONPATH=. python:*)",
      "Bash(PYTHONPATH=. pytest --tb=no -q)",
      "Bash(PYTHONPATH=. pytest --tb=no -x)",
      "Bash(PYTHONPATH=. pytest tests/unit tests/scenarios tests/integration --tb=line -q)",
      "Bash(make test-quick:*)",
      "Bash(make test-summary:*)",
      "Bash(PYTHONPATH=. pytest tests/scenarios/test_scenarios.py::test_rigid_body_with_fluid -v --tb=short)",
      "Bash(PYTHONPATH=. pytest tests/scenarios/test_scenarios.py::test_phase_transitions -k \"ICE-melting\" -v --tb=short)",
      "Bash(PYTHONPATH=. pytest tests/scenarios/test_scenarios.py::test_gravity_fall -k \"BASALT\" -v --tb=short)",
      "Bash(make:*)",
      "Bash(source .venv/bin/activate && *)",
      "Bash(PYTHONPATH=. pytest:*)",
      "Bash(./tests/run_all_tests.sh:*)",
      "Bash(*pytest*)",
      "Bash(*make test*)",
      "Bash(PYTHONPATH=. pytest tests/scenarios/test_scenarios.py::test_material_stability -v --tb=short)",
      "Bash(PYTHONPATH=. pytest tests/scenarios/test_scenarios.py::test_gravity_fall -k \"BASALT\" -v --tb=short -s)",
      "Bash(PYTHONPATH=. pytest tests/scenarios/test_scenarios.py::test_gravity_fall -v --tb=short)",
      "Bash(PYTHONPATH=. pytest tests/scenarios/test_scenarios.py::test_buoyancy -v --tb=short)",
      "Bash(PYTHONPATH=. pytest tests/scenarios/test_scenarios.py::test_hydrostatic_pressure -v --tb=short)",
      "Bash(PYTHONPATH=. pytest tests/scenarios/test_scenarios.py::test_hydrostatic_pressure -v --tb=short -s)",
      "Bash(timeout 30 python tests/run_visual_tests.py:*)",
      "Bash(cp:*)",
      "Bash(timeout 2 python tests/run_visual_tests.py:*)",
      "Bash(timeout:*)"
    ],
    "deny": []
  }
}